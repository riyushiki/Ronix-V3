import { Shape1D } from '../Shape1D';
export interface GaussianClassOptions {
    /**
     * The maximum value of the shape
     */
    height?: number;
    /**
     * Full width at half maximum.
     * @default 500
     */
    fwhm?: number;
    /**
     * The halft width between the inflection points or standard deviation.
     * If it is defined the fwhm would be re-assigned.
     */
    sd?: number;
}
export interface GetDataOptions extends GaussianClassOptions {
    /**
     * number of points of the shape.
     * @default 'fwhm * factor'
     */
    length?: number;
    /**
     * Number of times of fwhm to calculate length..
     * @default 'covers 99.99 % of volume'
     */
    factor?: number;
}
export interface GetAreaOptions {
    /**
     * The maximum intensity value of the shape
     * @default 1
     */
    height?: number;
    /**
     * Full width at half maximum.
     * @default 500
     */
    fwhm?: number;
    /**
     * The halft width between the inflection points or standard deviation.
     * If it is defined the fwhm would be re-assigned.
     */
    sd?: number;
}
export declare class Gaussian extends Shape1D {
    /**
     * The maximum value of the shape
     */
    height: number;
    /**
     * Full width at half maximum.
     * @default 500
     */
    fwhm: number;
    constructor(options?: GaussianClassOptions);
    fwhmToWidth(fwhm?: number): number;
    widthToFWHM(width: number): number;
    fct(x: number): number;
    getArea(): number;
    getFactor(area?: number): number;
    getData(options?: GetDataOptions): Float64Array;
}
/**
 * Return a parameterized function of a gaussian shape (see README for equation).
 * @returns - the y value of gaussian with the current parameters.
 */
export declare function fct(x: number, fwhm: number): number;
/**
 * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.
 * for more information check the [mathworld page](https://mathworld.wolfram.com/GaussianFunction.html)
 * @returns fwhm
 */
export declare function widthToFWHM(width: number): number;
/**
 * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).
 * for more information check the [mathworld page](https://mathworld.wolfram.com/GaussianFunction.html)
 * @param fwhm - Full Width at Half Maximum.
 * @returns width
 */
export declare function fwhmToWidth(fwhm: number): number;
/**
 * Calculate the area of a specific shape.
 * @returns returns the area of the specific shape and parameters.
 */
export declare function getArea(options: GetAreaOptions): number;
/**
 * Calculate the number of times FWHM allows to reach a specific area coverage.
 * @param [area=0.9999] Expected area to be covered.
 * @returns
 */
export declare function getFactor(area?: number): number;
/**
 * Calculate intensity array of a gaussian shape.
 * @returns {Float64Array} Intensity values.
 */
export declare function getData(options?: GetDataOptions): Float64Array;
